Import('env', 'plugins')

plugins += env.SharedLibrary('obj', ['obj.cpp'])
plugins += env.SharedLibrary('ply', ['ply.cpp', 'ply/ply_parser.cpp'],
	CPPPATH = env['CPPPATH'] + ['#src/shapes'])
plugins += env.SharedLibrary('serialized', ['serialized.cpp'])
plugins += env.SharedLibrary('rectangle', ['rectangle.cpp'])
plugins += env.SharedLibrary('disk', ['disk.cpp'])
plugins += env.SharedLibrary('sphere', ['sphere.cpp'])
plugins += env.SharedLibrary('cylinder', ['cylinder.cpp'])
plugins += env.SharedLibrary('hair', ['hair.cpp'])
plugins += env.SharedLibrary('shapegroup', ['shapegroup.cpp'])
plugins += env.SharedLibrary('instance', ['instance.cpp'])
plugins += env.SharedLibrary('cube', ['cube.cpp'])
plugins += env.SharedLibrary('heightfield', ['heightfield.cpp'])
#plugins += env.SharedLibrary('deformable', ['deformable.cpp'])

# ======grainmesh=======
grainmeshLib = ['grainmesh.cpp', 'grainmesh/grainmesh_kdtree.cpp']
prefix = 'grainmesh/fastbvh/'
grainmeshLib.append(prefix+'BBox.cpp')
grainmeshLib.append(prefix+'BVH.cpp')
plugins += env.SharedLibrary('grainmesh', grainmeshLib)

Export('plugins')
